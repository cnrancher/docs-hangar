"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[9903],{2062:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"advanced/merge-manifest","title":"Merge Manifest","description":"\u4f7f\u7528 hangar merge-manifest \u547d\u4ee4\u6574\u5408\u591a\u67b6\u6784\u5bb9\u5668\u955c\u50cf Manifest \u7d22\u5f15\u3002","source":"@site/i18n/zh/docusaurus-plugin-content-docs/version-v1.9/58-advanced/04-merge-manifest.md","sourceDirName":"58-advanced","slug":"/advanced/merge-manifest","permalink":"/zh/docs/v1.9/advanced/merge-manifest","draft":false,"unlisted":false,"editUrl":"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.9/58-advanced/04-merge-manifest.md","tags":[],"version":"v1.9","lastUpdatedAt":1741072654000,"sidebarPosition":4,"frontMatter":{"title":"Merge Manifest"},"sidebar":"docs","previous":{"title":"\u83b7\u53d6\u955c\u50cf\u7684 Manifest","permalink":"/zh/docs/v1.9/advanced/inspect"},"next":{"title":"\u8f6c\u6362\u955c\u50cf\u5217\u8868\u683c\u5f0f","permalink":"/zh/docs/v1.9/advanced/convert-list"}}');var t=a(4848),i=a(8453);const s={title:"Merge Manifest"},c=void 0,d={},o=[{value:"\u5feb\u901f\u4e0a\u624b",id:"\u5feb\u901f\u4e0a\u624b",level:2},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"hangar merge-manifest"})," \u547d\u4ee4\u6574\u5408\u591a\u67b6\u6784\u5bb9\u5668\u955c\u50cf Manifest \u7d22\u5f15\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u5feb\u901f\u4e0a\u624b",children:"\u5feb\u901f\u4e0a\u624b"}),"\n",(0,t.jsx)(n.p,{children:"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u6574\u5408\u591a\u67b6\u6784\u5bb9\u5668\u955c\u50cf\u7d22\u5f15\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n\nhangar merge-manifest registry.io/library/image:latest \\\n    registry.io/library/image:amd64 \\\n    registry.io/library/image:arm64\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u53ef\u4f7f\u7528 ",(0,t.jsx)(n.a,{href:"/docs/v1.9/advanced/inspect",children:"Inspect"})," \u547d\u4ee4\u67e5\u770b\u751f\u6210\u7684\u5bb9\u5668\u955c\u50cf Manifest \u7d22\u5f15\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u4f7f\u7528\u65b9\u6cd5",children:"\u4f7f\u7528\u65b9\u6cd5"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",metastring:'title="hangar merge-manifest --help"',children:"Merge multi-arch images manifest index\n\nUsage:\n  hangar merge-manifest [flags]\n\nExamples:\n# Merge multi-arch image manifest:\nhangar merge-manifest [IMAGE_NAME] [IMAGES]\n\n# Example:\nhangar merge-manifest registry.io/library/image:latest \\\n        registry.io/library/image:amd64 \\\n        registry.io/library/image:arm64\n\nFlags:\n      --dry-run      dry run\n  -h, --help         help for merge-manifest\n      --tls-verify   require HTTPS and verify certificates (default true)\n\nGlobal Flags:\n      --debug             enable debug output\n      --insecure-policy   run Hangar without policy check\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>c});var r=a(6540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);