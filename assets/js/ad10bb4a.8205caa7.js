"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[8526],{8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var t=i(6540);const d={},s=t.createContext(d);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},8669:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"dev/build","title":"Build Hangar","description":"Dependencies","source":"@site/versioned_docs/version-v1.6/14-dev/01-build.md","sourceDirName":"14-dev","slug":"/dev/build","permalink":"/docs/v1.6/dev/build","draft":false,"unlisted":false,"editUrl":"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.6/14-dev/01-build.md","tags":[],"version":"v1.6","lastUpdatedAt":1741617733000,"sidebarPosition":1,"frontMatter":{"title":"Build Hangar"},"sidebar":"docs","previous":{"title":"Development","permalink":"/docs/v1.6/dev/"},"next":{"title":"Automation Test","permalink":"/docs/v1.6/dev/test"}}');var d=i(4848),s=i(8453);const l={title:"Build Hangar"},r=void 0,a={},o=[{value:"Dependencies",id:"dependencies",level:2},{value:"Build",id:"build",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Install ",(0,d.jsx)(n.code,{children:"docker"})," and ",(0,d.jsx)(n.code,{children:"make"})]}),"\n",(0,d.jsx)(n.li,{children:"Linux / macOS"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,d.jsx)(n.p,{children:"Build Hangar using makefile:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"# Get help information\nmake help\n\n# Build binaries in the `build` folder\nmake build\n\n# Build all platform & architecture binaries in the `build` folder\nmake build-all\n\n# Execute unit tests\nmake test\n\n# Delete compiled binaries\nmake clean\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}}}]);