"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[5046],{6612:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=s(5893),r=s(1151);const a={title:"K3s Air-Gapped Installation"},t=void 0,o={id:"bestpractice/k3s",title:"K3s Air-Gapped Installation",description:"This example will guide you to setup a multi-arch private image registry server for K3s Air-Gapped installation.",source:"@site/versioned_docs/version-v1.7/20-bestpractice/02-k3s.md",sourceDirName:"20-bestpractice",slug:"/bestpractice/k3s",permalink:"/v1.7/bestpractice/k3s",draft:!1,unlisted:!1,editUrl:"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.7/20-bestpractice/02-k3s.md",tags:[],version:"v1.7",sidebarPosition:2,frontMatter:{title:"K3s Air-Gapped Installation"},sidebar:"docs",previous:{title:"Rancher Air-Gap Installation",permalink:"/v1.7/bestpractice/rancher"},next:{title:"RKE2 Air-Gap Installation",permalink:"/v1.7/bestpractice/rke2"}},c={},l=[{value:"Best Practice",id:"best-practice",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This example will guide you to setup a multi-arch private image registry server for K3s Air-Gapped installation."}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.a,{href:"https://docs.k3s.io/installation/airgap#private-registry-method",children:"K3s Private Registry Method"})," to prepare the private image registry server used by K3s."]}),"\n",(0,i.jsx)(n.h2,{id:"best-practice",children:"Best Practice"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Setup a private ",(0,i.jsx)(n.a,{href:"https://distribution.github.io/distribution/",children:"registry"})," server to host the container images used by K3s."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\n# In this example, we create a directory to store the container image layers.\nmkdir -p registry\n\ndocker run -d \\\n    -p 5000:5000 \\\n    -v $(pwd)/registry:/var/lib/registry \\\n    --name registry \\\n    registry:2\n"})}),"\n",(0,i.jsx)(n.p,{children:"Login to the private image registry."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"hangar login 'localhost:5000' --tls-verify=false\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"By default, the registry server can be login with any username and password."}),(0,i.jsxs)(n.p,{children:["You can configure the authentication config of the registry server by refer to ",(0,i.jsx)(n.a,{href:"https://distribution.github.io/distribution/spec/auth/",children:"Distribution Registry Token Authentication"})," and setup the ",(0,i.jsx)(n.a,{href:"https://distribution.github.io/distribution/about/deploying/#get-a-certificate",children:"HTTPS certificate"})," to use in production."]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download the K3s image list file from ",(0,i.jsx)(n.a,{href:"https://github.com/k3s-io/k3s/releases/",children:"K3s GitHub Release"})," page."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["We use version ",(0,i.jsx)(n.code,{children:"v1.27.6+k3s1"})," in this example."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"wget 'https://github.com/k3s-io/k3s/releases/download/v1.27.6%2Bk3s1/k3s-images.txt'\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If the server has the ability to access Docker Hub registry server (with internet connection), use Hangar ",(0,i.jsx)(n.a,{href:"/v1.7/mirror/mirror",children:"mirror"})," command to mirror both ",(0,i.jsx)(n.code,{children:"amd64"})," and ",(0,i.jsx)(n.code,{children:"arm64"})," container images from Docker Hub to your private image registry."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\nhangar mirror \\\n    -f 'k3s-images.txt' \\\n    -s 'docker.io' \\\n    -d 'localhost:5000' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5 \\\n    --tls-verify=false\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Use the Hangar ",(0,i.jsx)(n.a,{href:"/v1.7/mirror/validate",children:"mirror validate"})," command to verify the copied container images if necessary."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\nhangar mirror validate \\\n    -f 'k3s-images.txt' \\\n    -s 'docker.io' \\\n    -d 'localhost:5000' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5 \\\n    --tls-verify=false\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If the server can't access Docker Hub (without internet connection), use ",(0,i.jsx)(n.a,{href:"/v1.7/save/save",children:"hangar save"})," and ",(0,i.jsx)(n.a,{href:"/v1.7/load/load",children:"hangar load"})," command to copy container image to the private registry server."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\n# Save images into k3s-images.zip.\n# Run these commands on a internet accessible machine.\nhangar save \\\n    -f 'k3s-images.txt' \\\n    -s 'docker.io' \\\n    -d 'k3s-images.zip' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5\n\n# Validate the saved images if necessary.\nhangar save validate \\\n    -f 'k3s-images.txt' \\\n    -s 'docker.io' \\\n    -d 'k3s-images.zip' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The saved ",(0,i.jsx)(n.code,{children:"k3s-images.zip"})," archive file contains both ",(0,i.jsx)(n.code,{children:"amd64"})," and ",(0,i.jsx)(n.code,{children:"arm64"})," container images."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"#!/bin/bash\n\n# Load images from k3s-images.zip to the private image registry server.\n# Run these commands on air-gapped machine.\nhangar load \\\n    -s 'k3s-images.zip' \\\n    -d 'localhost:5000' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5 \\\n    --tls-verify=false\n\n# Validate the loaded images if necessary.\nhangar load validate \\\n    -s 'k3s-images.zip' \\\n    -d 'localhost:5000' \\\n    --arch 'amd64,arm64' \\\n    --os 'linux' \\\n    --jobs 5 \\\n    --tls-verify=false\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create the ",(0,i.jsx)(n.code,{children:"/etc/rancher/k3s/registries.yaml"})," configuration file by refer to ",(0,i.jsx)(n.a,{href:"https://docs.k3s.io/installation/private-registry",children:"K3s Private Registry Configuration"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["In this example, we assume that the private image registry IP address was bind to the URL ",(0,i.jsx)(n.code,{children:"private.io"}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"mkdir -p /etc/rancher/k3s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="/etc/rancher/k3s/registries.yaml"',children:'mirrors:\n    docker.io:\n        endpoint:\n        - "http://private.io:5000"\n    "private.io:5000":\n        endpoint:\n        - "http://private.io:5000"\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Install K3s by refer to the guide of ",(0,i.jsx)(n.a,{href:"https://docs.k3s.io/installation/airgap#install-k3s",children:"Air Gap install K3s"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'export INSTALL_K3S_SKIP_DOWNLOAD=true\nexport INSTALL_K3S_EXEC="--system-default-registry=private.io:5000"\n\n./install.sh\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can execute following command to pull images from the private image registry server to ensure that the ",(0,i.jsx)(n.code,{children:"registries.yaml"})," config is working properly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"k3s crictl pull private.io:5000/rancher/mirrored-pause:3.6\n"})}),"\n",(0,i.jsx)(n.p,{children:"Use following command to view pulled images from the private image registry:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell-session",children:"$ sudo k3s crictl images\nIMAGE                                              TAG                    IMAGE ID            SIZE\nprivate.io:5000/rancher/klipper-helm               v0.8.2-build20230815   5f89cb8137ccb       90.9MB\nprivate.io:5000/rancher/local-path-provisioner     v0.0.24                b29384aeb4b13       14.9MB\n......\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var i=s(7294);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);