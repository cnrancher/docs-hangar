"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[1474],{1796:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>r});var n=t(5893),i=t(1151);const d={title:"Load Validate Command"},s="load-validate",o={id:"load/validate",title:"Load Validate Command",description:"The load-validate command will verify the loaded image after executing load command to ensure that the image has been loaded to the destination registry. The list of images that fail the verification will be saved into the load-validate-failed.txt file.",source:"@site/versioned_docs/version-v1.6/12-load/02-validate.md",sourceDirName:"12-load",slug:"/load/validate",permalink:"/docs/v1.6/load/validate",draft:!1,unlisted:!1,editUrl:"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.6/12-load/02-validate.md",tags:[],version:"v1.6",lastUpdatedAt:1712484060,formattedLastUpdatedAt:"Apr 7, 2024",sidebarPosition:2,frontMatter:{title:"Load Validate Command"},sidebar:"docs",previous:{title:"Load Command",permalink:"/docs/v1.6/load/load"},next:{title:"Advanced Usage",permalink:"/docs/v1.6/advanced/"}},l={},r=[{value:"Quick Start",id:"quick-start",level:2},{value:"Usage",id:"usage",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"load-validate",children:"load-validate"}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"load-validate"})," command will verify the loaded image after executing ",(0,n.jsx)(a.code,{children:"load"})," command to ensure that the image has been loaded to the destination registry. The list of images that fail the verification will be saved into the ",(0,n.jsx)(a.code,{children:"load-validate-failed.txt"})," file."]}),"\n",(0,n.jsx)(a.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,n.jsxs)(a.p,{children:["The input file is created by save command, and use ",(0,n.jsx)(a.code,{children:"-d"})," to specify the destination registry URL."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-sh",children:"hangar load-validate -s ./saved-images.tar.gz -d private.registry.io\n"})}),"\n",(0,n.jsxs)(a.p,{children:["You can use ",(0,n.jsx)(a.code,{children:"--compress=dir"})," and ",(0,n.jsx)(a.code,{children:"-s ./saved-image-cache"})," to specify the decompressed cache directory to load-validate."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-sh",children:"hangar load-validate -s ./saved-image-cache -d private.registry.io --compress=dir\n"})}),"\n",(0,n.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-txt",children:"Usage:\n  hangar load-validate [flags]\n\nExamples:\n  hangar load-validate -s SAVED_FILE.tar.gz -d REGISTRY_URL\n\nFlags:\n  --compress string          compress format, can be 'gzip', 'zstd', or 'dir' (default \"gzip\")\n  --default-project string   project name (also called 'namespace') when destination image project is empty (default \"library\")\n  -d, --destination string       destination regitry\n  -o, --failed string            file name of the validate failed image list (default \"load-validate-failed.txt\")\n  -h, --help                     help for load-validate\n  -j, --jobs int                 worker number, concurrent mode if larger than 1, max 20 (default 1)\n  -s, --source string            saved file to load validate (need to use '--compress' to specify the file format if not gzip)\n\nGlobal Flags:\n  --debug        enable debug output\n  --tls-verify   enable https tls verify (default true)\n"})}),"\n",(0,n.jsx)(a.h1,{id:"faq",children:"FAQ"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Error: ",(0,n.jsx)(a.code,{children:"Validate failed: destination manifest MIME type unknown: application/vnd.docker.distribution.manifest.v2+json"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["This error will occur when the MediaType of the Manifest of the destination image is not ",(0,n.jsx)(a.code,{children:'"application/vnd.docker.distribution.manifest.list.v2+json"'}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["You can use ",(0,n.jsx)(a.code,{children:"skopeo inspect docker://<dest-image>:<tag> --raw"})," to check the ",(0,n.jsx)(a.code,{children:"MediaType"})," type of the Manifest of the destination image."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Error: ",(0,n.jsx)(a.code,{children:"destination manifest does not exists"}),", indicates that the destination image does not exist, please check the destination image."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"Encountered the following error:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-text",children:'11:22:33 [ERRO] [M_ID:1] srcSpec: [\n{\n      "digest": "",\n      "platform": {\n            "architecture": "amd64",\n            "os": "linux"\n      }\n}\n]\n11:22:33 [ERRO] [M_ID:1] dstSpec: [\n{\n      "digest": "",\n      "platform": {\n            "architecture": "amd64",\n            "os": "windows"\n            "os.version": "1.0.10"\n      }\n}\n]\n'})}),"\n",(0,n.jsx)(a.p,{children:"Indicates that the local image (srcSpec) does not match some fields of the server image (dstSpec)."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:a}={...(0,i.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,a,t)=>{t.d(a,{Z:()=>o,a:()=>s});var n=t(7294);const i={},d=n.createContext(i);function s(e){const a=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(d.Provider,{value:a},e.children)}}}]);