"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[1318],{5811:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"dev/build","title":"Build Hangar","description":"Hangar is written in Golang.","source":"@site/versioned_docs/version-v1.9/59-dev/01-build.md","sourceDirName":"59-dev","slug":"/dev/build","permalink":"/docs/v1.9/dev/build","draft":false,"unlisted":false,"editUrl":"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.9/59-dev/01-build.md","tags":[],"version":"v1.9","lastUpdatedAt":1741072654000,"sidebarPosition":1,"frontMatter":{"title":"Build Hangar"},"sidebar":"docs","previous":{"title":"Development","permalink":"/docs/v1.9/dev/"},"next":{"title":"Automation Test","permalink":"/docs/v1.9/dev/test"}}');var l=s(4848),r=s(8453);const d={title:"Build Hangar"},t=void 0,a={},o=[{value:"Building by goreleaser",id:"building-by-goreleaser",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"Hangar is written in Golang."}),"\n",(0,l.jsx)(n.p,{children:"You can follow the below instructions to build hangar executable binary."}),"\n",(0,l.jsx)(n.h2,{id:"building-by-goreleaser",children:"Building by goreleaser"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Install following build dependencies:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Golang >= ",(0,l.jsx)(n.code,{children:"1.23.x"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://goreleaser.com",children:"goreleaser"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"# Arch Linux\nsudo pacman -S base-devel gpgme device-mapper btrfs-progs\n\n# Ubuntu/Debian\nsudo apt install libgpgme-dev libassuan-dev libbtrfs-dev libdevmapper-dev pkg-config gcc\n\n# macOS\nbrew install gpgme\n\n# openSUSE\nsudo zypper install libgpgme-devel device-mapper-devel libbtrfs-devel glib2-devel\n\n# Fedora\nsudo dnf install gpgme-devel libassuan-devel btrfs-progs-devel device-mapper-devel\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Clone the source code."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/hangar.git && cd hangar\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Build hangar by goreleaser:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"make build\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The built binary file is available in the ",(0,l.jsx)(n.code,{children:"dist/"})," directory."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var i=s(6540);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);