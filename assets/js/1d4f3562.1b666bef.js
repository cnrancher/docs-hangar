"use strict";(self.webpackChunkdocs_hangar=self.webpackChunkdocs_hangar||[]).push([[3418],{4479:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"sign/sign","title":"Sign images with sigstore key-pair","description":"hangar sign command is for signing container images with sigstore key-pair.","source":"@site/versioned_docs/version-v1.9/14-sign/02-sign.md","sourceDirName":"14-sign","slug":"/sign/sign","permalink":"/docs/v1.9/sign/sign","draft":false,"unlisted":false,"editUrl":"https://github.com/cnrancher/docs-hangar/edit/main/versioned_docs/version-v1.9/14-sign/02-sign.md","tags":[],"version":"v1.9","lastUpdatedAt":1741072654000,"sidebarPosition":2,"frontMatter":{"title":"Sign images with sigstore key-pair"},"sidebar":"docs","previous":{"title":"Generate sigstore key","permalink":"/docs/v1.9/sign/generate-sigstore-key"},"next":{"title":"Validate the signed image signature","permalink":"/docs/v1.9/sign/validate"}}');var a=i(4848),t=i(8453);const r={title:"Sign images with sigstore key-pair"},o=void 0,c={},d=[{value:"Quick Start",id:"quick-start",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"hangar sign"})," command is for signing container images with sigstore key-pair."]}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"hangar sign"})," command in version ",(0,a.jsx)(n.code,{children:"1.8"})," is renamed to ",(0,a.jsx)(n.code,{children:"signv1"})," in version ",(0,a.jsx)(n.code,{children:"1.9"})," and marked as deprecated."]}),(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"hangar signv1 --help"})," to use the old sign V1 features."]})]}),"\n",(0,a.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,a.jsx)(n.p,{children:"Use following command to sign images."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Prepare an image list file."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",metastring:'title="example_image_list.txt"',children:"cnrancher/hangar:v1.9.0\ncnrancher/hangar:latest\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["You may need to use ",(0,a.jsx)(n.a,{href:"/docs/v1.9/mirror/mirror",children:"mirror"})," command to copy container images to the ",(0,a.jsx)(n.em,{children:"DESTINATION REGISTRY SERVER"})," before signing images."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Sign container images with sigstore private key."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nhangar sign \\\n    --file="example_image_list.txt" \\\n    --sigstore-key="sigstore.key" \\\n    --arch amd64,arm64 \\\n    --os linux \\\n    --registry="REGISTRY_SERVER_URL" \\\n    --jobs=4\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["You can use ",(0,a.jsx)(n.a,{href:"/docs/v1.9/advanced/inspect/",children:"inspect"})," command to view the signed sigstore signature."]}),"\n",(0,a.jsxs)(n.p,{children:["Use inspect to get the image ",(0,a.jsx)(n.code,{children:"sha256"})," digest, in this example is ",(0,a.jsx)(n.code,{children:"sha256:25fd8fc1aefcc8ae46aae23daefcd7dcb97f676fa0bc72ba0cf7c1b75df4f22e"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nhangar inspect --raw docker://REGISTRY_SERVER_URL/cnrancher/hangar:latest\n{\n  "schemaVersion": 2,\n  "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",\n  "manifests": [\n    {\n      "mediaType": "application/vnd.docker.distribution.manifest.v2+json",\n      "size": 528,\n      "digest": "sha256:25fd8fc1aefcc8ae46aae23daefcd7dcb97f676fa0bc72ba0cf7c1b75df4f22e",\n      "platform": {\n        "architecture": "amd64",\n        "os": "linux"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Inspect the sigstore signature manifest by specifying the sigstore signature tag:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nhangar inspect --raw "docker://REGISTRY_SERVER_URL/cnrancher/hangar:sha256-25fd8fc1aefcc8ae46aae23daefcd7dcb97f676fa0bc72ba0cf7c1b75df4f22e.sig"  | jq\n{\n  "schemaVersion": 2,\n  "mediaType": "application/vnd.oci.image.manifest.v1+json",\n  "config": {\n    "mediaType": "application/vnd.oci.image.config.v1+json",\n    "digest": "sha256:7abad20a44f07298df4f74a474baae8873f2009377cee2b468cf1dbad8275a31",\n    "size": 227\n  },\n  "layers": [\n    {\n      "mediaType": "application/vnd.dev.cosign.simplesigning.v1+json",\n      "digest": "sha256:af8fb401acf93b9ae2ef0be057d7e1ce9aa1044ef6744877aa16d693dc170c7e",\n      "size": 373,\n      "annotations": {\n        "dev.cosignproject.cosign/signature": "MEYCIQCZvL..."\n      }\n    },\n    {\n      "mediaType": "application/vnd.dev.cosign.simplesigning.v1+json",\n      "digest": "sha256:6f67c286b98255ee81ebf27af90bf8f1d980759fd8a64c7750cbb3d7d682c1d4",\n      "size": 373,\n      "annotations": {\n        "dev.cosignproject.cosign/signature": "MEUCIQ......"\n      }\n    }\n  ]\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Verify the signed image."}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"/docs/v1.9/sign/validate",children:"sign validate"})," command provides signature verify functions of the signed container image."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",metastring:'title="hangar sign --help"',children:'Sign images with cosign sigstore private key\n\nUsage:\n  hangar sign [flags]\n  hangar sign [command]\n\nExamples:\nhangar sign --key cosign.key <IMAGE>\n\nAvailable Commands:\n  validate    Validate the signed images with cosign sigstore public key\n\nFlags:\n  -a, --arch strings             architecture list of images (default [amd64,arm64])\n  -y, --auto-yes                 answer yes automatically (used in shell script)\n  -o, --failed string            file name of the scan failed image list (default "sign-failed.txt")\n  -f, --file string              image list file\n      --fulcio-url string        address of sigstore PKI server (default "https://fulcio.sigstore.dev")\n  -h, --help                     help for sign\n  -j, --jobs int                 worker number, scan images parallelly (1-20) (default 1)\n  -p, --key string               path to the private key file, KMS URI or Kubernetes Secret\n      --oidc-client-id string    OIDC client ID for application (default "sigstore")\n      --oidc-issuer string       OIDC provider to be used to issue ID token (default "https://oauth2.sigstore.dev/auth")\n      --oidc-provider string     Specify the provider to get the OIDC token from (Optional) (available: spiffe, google, github-actions, filesystem, buildkite-agent)\n      --os strings               OS list of images (default [linux])\n      --passphrase-file string   private key passphrase file\n      --project string           override all image projects in image list\n      --registry string          override all image registry URL in image list\n      --rekor-url string         address of rekor STL server (default "https://rekor.sigstore.dev")\n      --skip-login               skip check the registry is logged in (used in shell script)\n      --timeout duration         timeout when scan each images (default 10m0s)\n      --tlog-upload              whether or not to upload to the cosign transparency log server (default true)\n      --tls-verify               require HTTPS and verify certificates\n\nGlobal Flags:\n      --debug             enable debug output\n      --insecure-policy   run Hangar without policy check\n\nUse "hangar sign [command] --help" for more information about a command.\n'})})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);